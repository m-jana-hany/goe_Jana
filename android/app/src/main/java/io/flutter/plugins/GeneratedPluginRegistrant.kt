package io.flutter.plugins

import androidx.annotation.Keep

/**
 * Generated file. Do not edit.
 * This file is generated by the Flutter tool based on the
 * plugins that support the Android platform.
 */
@Keep
object GeneratedPluginRegistrant {
    private const val TAG = "GeneratedPluginRegistrant"
    fun registerWith(@NonNull flutterEngine: FlutterEngine) {
        try {
            flutterEngine.getPlugins().add(FlutterFirebaseFirestorePlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin cloud_firestore, io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(FlutterFirebaseAuthPlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin firebase_auth, io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(FlutterFirebaseCorePlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin firebase_core, io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(FlutterFirebaseStoragePlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin firebase_storage, io.flutter.plugins.firebase.storage.FlutterFirebaseStoragePlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(FlutterAndroidLifecyclePlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin flutter_plugin_android_lifecycle, io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(GoogleSignInPlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin google_sign_in_android, io.flutter.plugins.googlesignin.GoogleSignInPlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(ImagePickerPlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin image_picker_android, io.flutter.plugins.imagepicker.ImagePickerPlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(PathProviderPlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin path_provider_android, io.flutter.plugins.pathprovider.PathProviderPlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(SharePlusPlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin share_plus, dev.fluttercommunity.plus.share.SharePlusPlugin",
                e
            )
        }
        try {
            flutterEngine.getPlugins().add(UrlLauncherPlugin())
        } catch (e: Exception) {
            Log.e(
                TAG,
                "Error registering plugin url_launcher_android, io.flutter.plugins.urllauncher.UrlLauncherPlugin",
                e
            )
        }
    }
}
